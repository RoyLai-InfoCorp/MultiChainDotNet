trigger:
    - main

pool:
    vmImage: ubuntu-latest

variables:
    solution: '$(Build.SourcesDirectory)\MultiChainDotNet.sln'
    buildPlatform: "Any CPU"
    buildConfiguration: "Release"

steps:
    - task: DotNetCoreCLI@2
      displayName: Update NBGV tool
      inputs:
          command: custom
          custom: tool
          arguments: install --tool-path . nbgv

    - script: nbgv cloud -c -a
      displayName: Set Version

    - task: NuGetCommand@2
      inputs:
          restoreSolution: "$(solution)"
      displayName: Restore packages

    - task: DotNetCoreCLI@2
      inputs:
          command: "build"
          projects: '$(Build.SourcesDirectory)/src/MultiChainDotNet.Core/MultiChainDotNet.Core.csproj'
      displayName: Build

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifactType: 'pipeline'
        artifactName: 'drop'

    # - task: NuGetCommand@2
    #   inputs:
    #       command: pack
    #       packagesToPack: '$(Build.SourcesDirectory)/src/MultiChainDotNet.Core/MultiChainDotNet.Core.csproj'
    #       packDestination: '$(Build.ArtifactStagingDirectory)'
    #   displayName: Package files

    # - task: CopyFiles@2 # deprecated
    #   inputs:
    #       SourceFolder: '$(Build.SourcesDirectory)'
    #       Contents: '**/bin/$(buildConfiguration)/**'
    #       TargetFolder: "$(Build.ArtifactStagingDirectory)"
    #   displayName: Copy files for publishing

    # - task: PublishBuildArtifacts@1 # deprecated
    #   inputs:
    #       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #       ArtifactName: "drop"
    #       publicLocation: "Container"
    #   displayName: Publish to 'drop' container

    # - task: NuGetAuthenticate@0
    #   displayName: "NuGet Authenticate"
    # - task: NuGetCommand@2
    #   displayName: "NuGet push"
    #   inputs:
    #       command: push
    #       publishVstsFeed: "MultiChainDotNet/nuget-service-connection"
    #       allowPackageConflicts: true


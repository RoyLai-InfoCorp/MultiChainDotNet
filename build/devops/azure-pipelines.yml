trigger:
    - main

pool:
    vmImage: ubuntu-latest

variables:
    - name: solution
      value: '$(Build.SourcesDirectory)\MultiChainDotNet.sln'
    #solution: '$(Build.SourcesDirectory)\MultiChainDotNet.sln'
    - name: buildPlatform
      value: 'Any CPU'
    #buildPlatform: 'Any CPU'
    - name: buildConfiguration
      value: 'Release'
    #buildConfiguration: 'Release'
    - group: Secrets
    - name: pat
      value: $[variables.pat]

steps:
    - task: DotNetCoreCLI@2
      displayName: Update NBGV tool
      inputs:
          command: custom
          custom: tool
          arguments: install --tool-path . nbgv

    - script: nbgv cloud -c -a
      displayName: Set Version

    - task: NuGetCommand@2
      inputs:
          restoreSolution: '$(solution)'
      displayName: Restore packages

    - task: DotNetCoreCLI@2
      inputs:
          command: 'build'
          arguments: '--configuration $(buildConfiguration)'
          projects: '$(Build.SourcesDirectory)/src/MultiChainDotNet.Core/MultiChainDotNet.Core.csproj'
      displayName: Build

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/src/MultiChainDotNet.Core/bin/$(buildConfiguration)'
        artifactType: 'pipeline'
        artifactName: 'drop'

    # - task: NuGetAuthenticate@0
    #   inputs:
    #     nuGetServiceConnections: nuget-service-connection

    - script: dotnet nuget push --api-key $(pat) --source https://api.nuget.org/v3/index.json $(Build.SourcesDirectory)/**/*.nupkg
      displayName: Publish to nuget.org
    

    # - task: NuGetAuthenticate@0
    #   inputs:
    #     nuGetServiceConnections: 'nuget-service-connection'

    # - task: NuGetCommand@2
    #   inputs:
    #     command: push
    #     packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg;!$(Build.SourcesDirectory)/**/*.symbols.nupkg'
    #     nuGetFeedType: external
    #     publishFeedCredentials: 'nuget-service-connection'
    #     allowPackageConflicts: false

    # - task: DotNetCoreCLI@2
    #   inputs:
    #       command: 'pack'
    #       arguments: '--configuration $(buildConfiguration)'
    #       packDirectory: '$(System.ArtifactsDirectory)/packages'
    #       projects: '$(Build.SourcesDirectory)/src/MultiChainDotNet.Core/MultiChainDotNet.Core.csproj'
    #   displayName: Build and pack

    # - task: DotNetCoreCLI@2
    #   inputs:
    #     command: 'push'
    #     packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg'
    #     nugetFeedType: 'external'
    #     externalEndPoint: 'nuget-service-connection'

    # - task: NuGetCommand@2
    #   displayName: 'NuGet push'
    #   inputs:
    #       command: push
    #       feedsToUse: 'nuget-service-connection'
    #       packagesToPush: '$(System.ArtifactsDirectory)/**/*.nupkg'
    #       allowPackageConflicts: false
    #       includeNugetOrg: 'true'

